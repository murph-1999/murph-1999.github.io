import{_ as t,o as a,c as o,j as e,a as n}from"./chunks/framework.D8k27DW7.js";const v=JSON.parse('{"title":"组件化","description":"","frontmatter":{},"headers":[],"relativePath":"vue/vue2/12-component.md","filePath":"vue/vue2/12-component.md","lastUpdated":null}'),s={name:"vue/vue2/12-component.md"},r=e("h1",{id:"组件化",tabindex:"-1"},[n("组件化 "),e("a",{class:"header-anchor",href:"#组件化","aria-label":'Permalink to "组件化"'},"​")],-1),c=e("p",null,"在进行源码分析前，就强调了vue.js的核心思想就是组件化。在实际开发过程中，我们会将页面拆分成多个组件，每个组件依赖的 CSS、JavaScript、模板、图片等资源放在一起开发和维护。不过如果不理解组件内部是如何工作的，可能遇到问题后会难以排查，或者缺失一些基础概念，所以弄清楚组件内容工作原理还是很有必要的。这节先从组件注册开始分析。",-1),d=[r,c];function i(p,_,l,m,u,h){return a(),o("div",{"data-pagefind-body":!0},d)}const x=t(s,[["render",i]]);export{v as __pageData,x as default};
