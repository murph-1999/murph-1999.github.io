import{_ as i,o as s,c as t,a8 as e}from"./chunks/framework.Q0X2mdF-.js";const u=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"basic/network/basic.md","filePath":"basic/network/basic.md","lastUpdated":null}'),o={name:"basic/network/basic.md"},a=e('<h2 id="cookies-的作用" tabindex="-1"><strong>Cookies 的作用</strong> <a class="header-anchor" href="#cookies-的作用" aria-label="Permalink to &quot;**Cookies 的作用**&quot;">​</a></h2><p>Cookies 是浏览器存储在客户端的一小段数据（一般 4KB 以内），主要用于 <strong>保持状态</strong> 和 <strong>跨页面存储数据</strong>。它们通常由服务器设置，并随请求发送到服务器。</p><h3 id="cookies-主要用途" tabindex="-1"><strong>Cookies 主要用途</strong> <a class="header-anchor" href="#cookies-主要用途" aria-label="Permalink to &quot;**Cookies 主要用途**&quot;">​</a></h3><ol><li><p><strong>会话管理（Session Management）</strong></p><ul><li>维持用户登录状态（例如 <code>sessionId</code>）。</li><li>记录用户访问的状态（如购物车、浏览历史等）。</li></ul></li><li><p><strong>个性化（Personalization）</strong></p><ul><li>记住用户的偏好设置（如网站的语言、主题模式等）。</li></ul></li><li><p><strong>跟踪与分析（Tracking &amp; Analytics）</strong></p><ul><li>统计用户访问数据（如 Google Analytics）。</li><li>进行广告投放（如用户画像、兴趣定向广告）。</li></ul></li></ol><hr><h2 id="项目中-cookies-的常见使用场景" tabindex="-1"><strong>项目中 Cookies 的常见使用场景</strong> <a class="header-anchor" href="#项目中-cookies-的常见使用场景" aria-label="Permalink to &quot;**项目中 Cookies 的常见使用场景**&quot;">​</a></h2><h3 id="_1-维持登录状态" tabindex="-1"><strong>1. 维持登录状态</strong> <a class="header-anchor" href="#_1-维持登录状态" aria-label="Permalink to &quot;**1. 维持登录状态**&quot;">​</a></h3><p>当用户登录后，服务器生成一个 <code>sessionId</code> 并存入 <code>Set-Cookie</code>，浏览器会在后续请求中自动携带该 <code>cookie</code>，让服务器识别用户身份。</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Set</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Cookie</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: sessionId</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">abc123; HttpOnly; Secure; SameSite</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Strict</span></span></code></pre></div><p>📌 <strong>适用于：</strong></p><ul><li><strong>后端管理系统</strong>（如 Vue + Node.js）</li><li><strong>需要身份验证的 Web 应用</strong></li></ul><hr><h3 id="_2-记住用户偏好" tabindex="-1"><strong>2. 记住用户偏好</strong> <a class="header-anchor" href="#_2-记住用户偏好" aria-label="Permalink to &quot;**2. 记住用户偏好**&quot;">​</a></h3><p>例如，一个网站可以使用 <code>cookie</code> 记录用户的主题偏好：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">document.cookie </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;theme=dark; path=/; max-age=31536000&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 有效期 1 年</span></span></code></pre></div><p>📌 <strong>适用于：</strong></p><ul><li>主题模式（深色 / 浅色）</li><li>语言选择（<code>zh-CN</code> / <code>en-US</code>）</li><li>记住上次访问的页面</li></ul><hr><h3 id="_3-购物车" tabindex="-1"><strong>3. 购物车</strong> <a class="header-anchor" href="#_3-购物车" aria-label="Permalink to &quot;**3. 购物车**&quot;">​</a></h3><p>对于未登录用户，购物车信息可以保存在 <code>cookie</code> 中：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">document.cookie </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;cartItems=[{id:1,qty:2}]; path=/; max-age=86400&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><p>📌 <strong>适用于：</strong></p><ul><li>电商网站</li><li>需要暂存数据但不想依赖 <code>localStorage</code></li></ul><hr><h3 id="_4-统计分析-广告投放" tabindex="-1"><strong>4. 统计分析 &amp; 广告投放</strong> <a class="header-anchor" href="#_4-统计分析-广告投放" aria-label="Permalink to &quot;**4. 统计分析 &amp; 广告投放**&quot;">​</a></h3><p>广告网络使用 <code>cookie</code> 跟踪用户行为，如：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Set</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Cookie</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: trackingId</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">xyz789; Domain</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.example.com; Path</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; Secure</span></span></code></pre></div><p>📌 <strong>适用于：</strong></p><ul><li>Google Analytics</li><li>Facebook Pixel</li><li>个性化广告投放（Remarketing）</li></ul><hr><h2 id="cookies-vs-其他存储方式" tabindex="-1"><strong>Cookies vs 其他存储方式</strong> <a class="header-anchor" href="#cookies-vs-其他存储方式" aria-label="Permalink to &quot;**Cookies vs 其他存储方式**&quot;">​</a></h2><table tabindex="0"><thead><tr><th>存储方式</th><th>数据大小</th><th>是否随请求发送</th><th>适用场景</th></tr></thead><tbody><tr><td><strong>Cookies</strong></td><td>~4KB</td><td>✅（每次请求）</td><td>认证、状态管理</td></tr><tr><td><strong>LocalStorage</strong></td><td>~5MB</td><td>❌（仅本地）</td><td>缓存数据，长期存储</td></tr><tr><td><strong>SessionStorage</strong></td><td>~5MB</td><td>❌（仅本地）</td><td>临时存储（关闭标签页失效）</td></tr></tbody></table><hr><h2 id="cookies-在项目中的使用建议" tabindex="-1"><strong>Cookies 在项目中的使用建议</strong> <a class="header-anchor" href="#cookies-在项目中的使用建议" aria-label="Permalink to &quot;**Cookies 在项目中的使用建议**&quot;">​</a></h2><ol><li><p><strong>安全性</strong></p><ul><li><code>HttpOnly</code>: 防止 JavaScript 读取（防止 XSS）</li><li><code>Secure</code>: 仅 HTTPS 传输</li><li><code>SameSite=Strict</code>: 预防 CSRF 攻击</li></ul></li><li><p><strong>避免滥用</strong></p><ul><li>不存敏感信息（如密码）</li><li>对于大数据，使用 <code>localStorage</code> 或 <code>sessionStorage</code></li></ul></li><li><p><strong>跨域问题</strong></p><ul><li>需要 <code>Access-Control-Allow-Credentials: true</code></li><li><code>Domain</code> 需设置为主域（如 <code>.example.com</code>）</li></ul></li></ol><hr><h2 id="总结" tabindex="-1"><strong>总结</strong> <a class="header-anchor" href="#总结" aria-label="Permalink to &quot;**总结**&quot;">​</a></h2><ul><li><strong>如果是用户登录管理</strong>，建议后端 <strong>使用 <code>sessionId</code> + <code>cookie</code></strong> 来保持状态。</li><li><strong>如果是存储简单的用户偏好</strong>，可直接用 <code>cookie</code> 或 <code>localStorage</code>。</li><li><strong>如果是广告或分析</strong>，<code>cookie</code> 适合作为用户标识符。</li></ul><p>你项目中有使用 Cookies 吗？遇到什么问题了吗？</p><p>┌─────────────────────────────────────────────────────────────────────────┐ │ OneKeyAccount (主容器) │ │ │ │ ┌─────────────┐ ┌─────────────┐ ┌─────────────┐ ┌─────────────┐ │ │ │ 数据状态管理 │ │ 步骤控制逻辑 │ │ 表单数据处理 │ │ API交互逻辑 │ │ │ └─────────────┘ └─────────────┘ └─────────────┘ └─────────────┘ │ │ │ │ ┌─────────────────────────────────────────────────────────────────┐ │ │ │ 组件树和数据流 │ │ │ │ │ │ │ │ ┌───────────────┐ │ │ │ │ │ StepProgress │◄───── currentStep │ │ │ │ └───────────────┘ │ │ │ │ │ │ │ │ ┌───────────────┐ │ │ │ │ │ SideMenu │◄───── activeMenu, menuItems │ │ │ │ └───────┬───────┘ │ │ │ │ │ │ │ │ │ │ │ │ menu-click │ │ │ │ │ ▼ │ │ │ │ │ ┌───────────────────────────────────┐ │ │ │ │ │ FormContainer │ │ │ │ │ │ │ │ │ │ │ │ ┌─────────────────────────────┐ │ │ │ │ │ │ │ 动态表单组件 │ │ │ │ │ │ │ │ │ │ │ │ │ │ │ │ ┌─────────┐ ┌─────────┐ │ │ │ │ │ │ │ │ │ProductForm│ │UnitForm │ │ │ │ │ │ │ │ │ └─────────┘ └─────────┘ │ │ │ │ │ │ │ │ │ │ │ │ │ │ │ │ ┌─────────┐ ┌─────────┐ │ │ │ │ │ │ │ │ │UnitListForm│ │AccountForm│ │ │ │ │ │ │ │ │ └─────────┘ └─────────┘ │ │ │ │ │ │ │ │ │ │ │ │ │ │ │ │ ┌─────────┐ │ │ │ │ │ │ │ │ │PasswordForm│ │ │ │ │ │ │ │ │ └─────────┘ │ │ │ │ │ │ │ └─────────────────────────────┘ │ │ │ │ │ └───────────────────────────────────┘ │ │ │ │ │ │ │ └─────────────────────────────────────────────────────────────────┘ │ └─────────────────────────────────────────────────────────────────────────┘</p><p>┌─────────────────────────────────────────────────────────────────────────┐ │ 数据流向 │ │ │ │ 1. 父组件 → 子组件: │ │ - currentStep → StepProgress, FormContainer │ │ - activeMenu → SideMenu, FormContainer │ │ - formData → FormContainer → 动态表单组件 │ │ │ │ 2. 子组件 → 父组件: │ │ - menu-click → SideMenu → OneKeyAccount (更新 activeMenu) │ │ - form-change → 动态表单组件 → FormContainer → OneKeyAccount │ │ - prev-step/next-step → FormContainer → OneKeyAccount │ │ │ │ 3. API交互: │ │ - OneKeyAccount → API → 后端服务 │ │ - 表单提交/保存 → API → 后端服务 │ │ │ └─────────────────────────────────────────────────────────────────────────┘</p><p>┌─────────────────────────────────────────────────────────────────────────┐ │ 状态管理 │ │ │ │ ┌─────────────────┐ │ │ │ OneKeyAccount │ │ │ │ (状态容器) │ │ │ └────────┬────────┘ │ │ │ │ │ ▼ │ │ ┌─────────────────────────────────────────────────────────────────┐ │ │ │ formData 对象 │ │ │ │ ┌─────────┐ ┌─────────┐ ┌─────────┐ ┌─────────┐ ┌─────────┐ │ │ │ │ │ product │ │ unit │ │ unitList│ │ account │ │password │ │ │ │ │ └─────────┘ └─────────┘ └─────────┘ └─────────┘ └─────────┘ │ │ │ └─────────────────────────────────────────────────────────────────┘ │ │ │ └─────────────────────────────────────────────────────────────────────────┘</p>',42),n=[a];function l(r,d,c,h,p,k){return s(),t("div",{"data-pagefind-body":!0},n)}const m=i(o,[["render",l]]);export{u as __pageData,m as default};
